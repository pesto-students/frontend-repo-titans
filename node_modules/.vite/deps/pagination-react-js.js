import {
  require_react
} from "./chunk-CMM6OKGN.js";
import {
  __toESM
} from "./chunk-OL46QLBJ.js";

// node_modules/pagination-react-js/dist/esm/hooks/usePagination.js
var import_react = __toESM(require_react());

// node_modules/pagination-react-js/dist/esm/functions/generateNumArr.js
function generateNumArr(loopStart, loopMax) {
  var numArr = [];
  for (var i = loopStart; i <= loopMax; i++) {
    numArr.push(i);
  }
  return numArr;
}
var generateNumArr_default = generateNumArr;

// node_modules/pagination-react-js/dist/esm/functions/getOffsetNumbers.js
function getOffsetNumbers(_a) {
  var pageNumbers = _a.pageNumbers, firstNumber = _a.firstNumber, lastNumber = _a.lastNumber, activeNumber = _a.activeNumber, offset = _a.offset, permanentFirstNumber = _a.permanentFirstNumber, permanentLastNumber = _a.permanentLastNumber;
  var additionalOffsetStart = firstNumber + offset * 2 + (permanentFirstNumber ? 1 : 0);
  var additionalOffsetEnd = lastNumber - offset * 2 - (permanentLastNumber ? 1 : 0);
  var pageOffsetNumbers = [];
  for (var _i = 0, pageNumbers_1 = pageNumbers; _i < pageNumbers_1.length; _i++) {
    var pageNumber = pageNumbers_1[_i];
    if (pageNumber === activeNumber || pageNumber <= activeNumber + offset && pageNumber > activeNumber || pageNumber >= activeNumber - offset && pageNumber < activeNumber || activeNumber - offset <= firstNumber && pageNumber <= additionalOffsetStart || activeNumber + offset >= lastNumber && pageNumber >= additionalOffsetEnd) {
      pageOffsetNumbers.push(pageNumber);
    }
  }
  return { pageOffsetNumbers };
}

// node_modules/pagination-react-js/dist/esm/hooks/usePagination.js
function usePagination(_a) {
  var initialActivePage = _a.activePage, initialRecordsPerPage = _a.recordsPerPage, totalRecordsLength = _a.totalRecordsLength, offset = _a.offset, navCustomPageSteps = _a.navCustomPageSteps, permanentFirstNumber = _a.permanentFirstNumber, permanentLastNumber = _a.permanentLastNumber;
  var _b = (0, import_react.useState)(initialActivePage), activePage = _b[0], setActivePage = _b[1];
  var _c = (0, import_react.useState)(initialRecordsPerPage), recordsPerPage = _c[0], setRecordsPerPage = _c[1];
  var indexOfLastRecord = (recordsPerPage > totalRecordsLength ? totalRecordsLength : activePage * recordsPerPage) - 1;
  var indexOfFirstRecord = recordsPerPage > indexOfLastRecord ? 0 : indexOfLastRecord - recordsPerPage + 1;
  var pageNumbers = generateNumArr_default(1, Math.ceil(totalRecordsLength / recordsPerPage));
  var firstPage = pageNumbers[0];
  var lastPage = pageNumbers[pageNumbers.length - 1];
  var pageOffsetNumbers = getOffsetNumbers({
    pageNumbers,
    firstNumber: firstPage,
    lastNumber: lastPage,
    activeNumber: activePage,
    offset,
    permanentFirstNumber,
    permanentLastNumber
  }).pageOffsetNumbers;
  return {
    records: {
      perPage: recordsPerPage,
      indexOfFirst: indexOfFirstRecord,
      indexOfLast: indexOfLastRecord
    },
    pageNumbers: {
      activePage,
      firstPage,
      lastPage,
      previousPage: activePage > firstPage ? activePage - 1 : false,
      nextPage: activePage < lastPage ? activePage + 1 : false,
      customPreviousPage: (navCustomPageSteps === null || navCustomPageSteps === void 0 ? void 0 : navCustomPageSteps.prev) && activePage - navCustomPageSteps.prev >= firstPage + 1 ? activePage - navCustomPageSteps.prev : false,
      customNextPage: (navCustomPageSteps === null || navCustomPageSteps === void 0 ? void 0 : navCustomPageSteps.next) && activePage + navCustomPageSteps.next <= lastPage - 1 ? activePage + navCustomPageSteps.next : false,
      navigation: pageOffsetNumbers
    },
    setRecordsPerPage: function(recordsPerPage2) {
      setRecordsPerPage(recordsPerPage2);
    },
    setActivePage: function(pageNumber) {
      setActivePage(pageNumber);
    }
  };
}

// node_modules/pagination-react-js/dist/esm/functions/generateTestData.js
function generateTestData(numberOfRecords, cb) {
  var dataList = [];
  for (var i = 1; i <= numberOfRecords; i++) {
    dataList.push(cb(i));
  }
  return dataList;
}
var generateTestData_default = generateTestData;
export {
  generateTestData_default as generateTestData,
  usePagination
};
//# sourceMappingURL=pagination-react-js.js.map
